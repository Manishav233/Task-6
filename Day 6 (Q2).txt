Part 1: Find the culprits and nail them — debugging javascript

1. Find the culprit: fix.html

code: 

<!DOCTYPE html>
<html>
<body>
 <script>
 alert( "I’m JavaScript!");
 </script>
 Whats the error in this ?
</body>
</html>

Output:
alert msg : I’m JavaScript!
 Whats the error in this ? 

2. Find the culprit and invoke the alert

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src="Practice.js"></script>
</body>
</html>

Practice.js

alert("I’m invoked!");

output: Alert : I'm invoked

3. Explain the below how it works

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src="Practice.js"></script>
</body>
</html>

Practice.js

alert("I'm JavaScript!");
alert('Hello') // this line is not having semicolon
alert(`Wor
 ld`)
alert(3 +
1
+ 2); // this is multiple line code and its working


Working: 

Semicolons are usually optional in JavaScript, So line 2 in practice.js will work without errors.

ECMAScript 6 (ES6) introduces a new type of literal, namely template literals.
If template literal is delimited by backticks, It allows us to use multiline.

4. Fix the below to alert Guvi geek

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src="Practice.js"></script>
</body>
</html>

Practice.js
let admin=9, fname=10.5; 
fname = "Guvi";
let lname = "geek"
admin = fname+lname;
alert( admin );

output: alert: Guvigeek

5. Fix the below to alert hello Guvi geek

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src=”Practice.js”></script>
</body>
</html>

Practice.js

let fname=10.5; 
fname = 'Guvi';
let lname = 'geek';
let name = fname+lname;
alert(`hello ${name}`);

output: 

alert: hello Guvigeek

6. fix.html
<!DOCTYPE html>
<html>
<body>
 <script src=”Practice.js”></script>
</body>
</html>
script.js

Practice.js

let a =parseInt( prompt("First number?"));
let b = parseInt(prompt("Second number?"));

alert(a+b);

output: 

First number:2
Second number:2

4

7. If you run the below scritpt you will get “Code is Blasted”
Explain Why the Code is blasted and how to diffuse it and get “Diffused”.

* Falsy values are undefined, null, NaN, 0, "" (empty string), and false, So '2'>'12' is also considered as true.So we get if part that is code is blasted.

<!DOCTYPE html>
<html>
<body>
 <script src="Practice.js"></script>
</body>
</html>

Practice.js

var a = 2>12;
if (a) {
  console.log("Code is Blasted");
}
else
{
  console.log("Diffused") ;
}

output: Diffused

8. How to get the success in console.

const a = prompt("Enter a number?");
if (a) {
 console.log( "OMG it works for any number inc 0");
}
else
{
 console.log( "Success" );
}

Output:

Enter a number?
0
Success

9. How to get the correct score in console.

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src="Practice.js"></script>
</body>
</html>


Practice.js

let value = prompt("How many runs you scored in this ball");
value=parseInt(value);
if (value === 4) {
      console.log("You hit a Four");
} else if (value === 6) {
      console.log("You hit a Six");
} else {
      console.log("I couldn't figure out");
}

output:

How many runs you scored in this ball:4

You hit a Four

10. Fix the code to welcome the Employee

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src="Practice.js"></script>
</body>
</html>

Practice.js

let login = 'Employee';
let message = (login === 'Employee') ? 'Greetings' : 'No login' ;
console.log(message);

output:

Greetings


11. Fix the code to welcome the boss

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src="Practice.js"></script>
</body>
</html>

Practice.js

let message;
if (message === null||message=== 2 || message===undefined )
{
message = "welcome boss";
}
else
{
 message = "Go away";
}
  console.log(message);

output: welcome boss

12. Fix the code to welcome the boss

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src="Practice.js"></script>
</body>
</html>

Practice.js

let message;
let lock = 0;
//Dont change any code below this
if (lock && " " || undefined )
{
  message = "Go away";
}
else
{
 message = "welcome";
}
console.log(message);

output: welcome

13. Change the code to print

3
2
1

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src="Practice.js"></script>
</body>
</html>

Practice.js

let i = 3;
while (i>0) {
  console.log( i );
  i--
}


output:

3
2
1

14. Change the code to print 1 to 10 in 4 lines

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src="Practice.js"></script>
</body>
</html>

Practice.js

let num = 1
for(num=1;num<=10;num++)
{
console.log(num);
}

or

let num=1;
while(num<=10)
{
console.log(num);
num++;
}

output:

1
2
3
4
5
6
7
8
9
10

15. Change the code to print even numbers.
fix.html

<!DOCTYPE html>
<html>
<body>
 <script src="Practice.js"></script>
</body>
</html>

Practice.js

for (let num = 2; num <= 20; num += 2) {
  console.log(num)
}

output: 

2
4
6
8
10
12
14
16
18
20

16. Change the code to print all the gifts

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src="Practice.js"></script>
</body>
</html>

Practice.js

let gifts = ["teddy bear", "drone", "doll"];
for (let i = 0; i < 3; i++) {
  console.log(`Wrapped ${gifts[i]} and added a bow!`);
}

output:

Wrapped teddy bear and added a bow!
Wrapped drone and added a bow!
Wrapped doll and added a bow!

17. Fix the code to disarm the bomb.

fix.html

<!DOCTYPE html>
<html>
<body>
 <script src="Practice.js"></script>
</body>
</html>

Practice.js

let countdown = 100;
while (countdown > 0) {
  countdown--;
  if(countdown == 0)
  {
   console.log("bomb triggered");
  }
}

output: bomb triggered

18. Whats the msg printed and why?

var lemein = "0";
var lemeout = 0;
var msg = "";
if (lemein) {
 msg += "hi";
 }
if (lemeout) {
 msg += 'Hello';
}
console.log(msg);

output: hi

Reason: Since lemein is assigned to string, It is considered as true in if condition, Later lemeout is assigned to 0 which is false in if condition, So the output will be only hi.

GUVI: Zen Class — Part 3: Find the culprits and nail them — debugging javascript

1. Fix the code to get the largest of three.

let aa = (f,s,t) => {
 console.log(f,s,t);
 if(f>s &&f>t){
 console.log(f)}
 else if(s>f && s>t){
 console.log(s)}
 else{
 console.log(t)}
};
aa(1,2,3);

Output: 
1 2 3
3


2. Fix the code to Sum of the digits present in the number

let n = 123;

function add(n)
{
let sum = 10;
//for(var i=0;i<n.length;i++){
    while(n!==0){
 var rem=n%10;
 sum=sum+rem;
 n=n/10;
 }
 return parseInt(sum);
}
console.log(add(n));

Output: 16
